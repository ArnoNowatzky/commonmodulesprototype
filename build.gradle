import org.apache.tools.ant.taskdefs.condition.Os

apply {
    plugin 'base'
}

def buildTasksWithDocker = ['clean', 'build', 'releaseLocalSnapshot', 'dockerBuildImage']

def buildTasks = ['clean', 'build', 'releaseLocalSnapshot', 'dockerBuildImage']
if (Os.isFamily(Os.FAMILY_WINDOWS))
    buildTasks = ['clean', 'build', 'releaseLocalSnapshot'] //No docker yet available

task buildHelloWorld(type: GradleBuild) {
    dir = 'commonModuleHelloWorld'
    tasks = buildTasks
}

task buildService(type: GradleBuild) {
    dir = 'commonModuleService'
    tasks = buildTasks
}

task buildUi(type: GradleBuild) {
    dir = 'commonModuleUi'
    tasks = buildTasks
}

task buildRuntime(type: GradleBuild) {
    dir = 'commonModuleRuntime'
    tasks = ['clean', 'build', 'releaseLocalSnapshot']
}

task startRuntime {
    doFirst {
        println "Start the runtime"
    }
    dependsOn buildRuntime

}

task buildJavaClient(type: GradleBuild) {
    dir = 'clients/java'
    tasks = ['build']
    dependsOn buildService, buildUi, buildRuntime, startRuntime
}

task stopRuntime {
    doFirst {
        println "Start the runtime"
    }

    dependsOn buildJavaClient

}

tasks.build.dependsOn(buildHelloWorld)
tasks.build.dependsOn(buildService)
tasks.build.dependsOn(buildUi)
tasks.build.dependsOn(buildRuntime)
tasks.build.dependsOn(buildJavaClient)


